#!/usr/bin/python
# coding: utf-8
from time import time

from goldminer.common.logger import get_logger
from goldminer.spider.eastmoney.PerformanceForecastSpider import PerformanceForecastSpider
from goldminer.spider.eastmoney.PerformancePreviewSpider import PerformancePreviewSpider
from goldminer.spider.tushare.IndexSpider import IndexSpider
from goldminer.spider.tushare.StockSpider import StockSpider
from goldminer.spider.v3.IndexBarSpider import IndexBarSpider
from goldminer.spider.v3.IndexWeightsSpider import IndexWeightsSpider
from goldminer.spider.v3.StockBalanceSheetSpider import StockBalanceSheetSpider
from goldminer.spider.v3.StockDailyBarAdjustNoneSpider import StockDailyBarAdjustNoneSpider
from goldminer.spider.v3.StockDailyBarAdjustPrevSpider import StockDailyBarAdjustPrevSpider
from goldminer.spider.v3.StockDerivativeFinanceIndicatorSpider import StockDerivativeFinanceIndicatorSpider
from goldminer.spider.v3.StockIncomeStatementSpider import StockIncomeStatementSpider
from goldminer.spider.v3.StockIndustrySpider import StockIndustrySpider
from goldminer.spider.v3.StockPrimaryFinanceIndicatorSpider import StockPrimaryFinanceIndicatorSpider
from goldminer.spider.v3.StockTradingDerivativeIndicatorSpider import StockTradingDerivativeIndicatorSpider

begin = time()
time_costs = []


start = time()
spider = StockSpider()
spider.getStockFromTuShare()
time_costs.append("StockSpider cost {}s".format(time() - start))


start = time()
spider = StockIndustrySpider()
spider.updateIndustry()
time_costs.append("StockIndustrySpider cost {}s".format(time() - start))


start = time()
spider = IndexSpider()
spider.updateIndexListFromTushare()
time_costs.append("IndexSpider cost {}s".format(time() - start))


start = time()
spider = IndexWeightsSpider()
spider.downloadAllIndexConstituents()
time_costs.append("IndexWeightsSpider cost {}s".format(time() - start))


start = time()
spider = IndexBarSpider()
spider.downloadAllIndexBars()
time_costs.append("IndexBarSpider cost {}s".format(time() - start))


start = time()
spider = StockDailyBarAdjustNoneSpider()
spider.downloadAll()
time_costs.append("DailyBarAdjustNoneSpider cost {}s".format(time() - start))



start = time()
spider = StockBalanceSheetSpider()
spider.downloadAll(mode="batch", batch_size=40)
time_costs.append("BalanceSheetSpider cost {}s".format(time() - start))


start = time()
spider = StockIncomeStatementSpider()
spider.downloadAll(mode="batch", batch_size=40)
time_costs.append("IncomeStatementSpider cost {}s".format(time() - start))


start = time()
spider = StockPrimaryFinanceIndicatorSpider()
spider.downloadAll(mode="batch", batch_size=40)
time_costs.append("PrimaryFinanceIndicatorSpider cost {}s".format(time() - start))


start = time()
spider = StockTradingDerivativeIndicatorSpider()
spider.downloadAll(mode="single")
time_costs.append("TradingDerivativeIndicatorSpider cost {}s".format(time() - start))


start = time()
spider = StockDerivativeFinanceIndicatorSpider()
spider.downloadAll(mode="batch", batch_size=40)
time_costs.append("DerivativeFinanceIndicatorSpider cost {}s".format(time() - start))

start = time()
spider = PerformanceForecastSpider()
spider.run()
time_costs.append("PerformanceForecastSpider cost {}s".format(time() - start))

start = time()
spider = PerformancePreviewSpider()
spider.run()
time_costs.append("PerformancePreviewSpider cost {}s".format(time() - start))

logger = get_logger(__name__)
for line in time_costs:
    logger.info(line)
